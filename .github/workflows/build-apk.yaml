name: Build and Release APK

on:
  push:
  workflow_dispatch:  # ðŸ‘ˆ Manual trigger support

permissions:
  contents: write  # This gives GitHub Actions permission to push tags

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Set up Android SDK
      uses: android-actions/setup-android@v3

    # Set up Gradle cache for faster builds
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Grant execute permissions to gradlew
      run: chmod +x ./gradlew

    # Build the APK
    - name: Build APK
      run: ./gradlew assembleRelease

      # Ensure the APK exists before proceeding
    - name: Ensure APK exists
      run: |
        if [ -f app/build/outputs/apk/release/app-release-unsigned.apk ]; then
          echo "APK exists!"
        else
          echo "APK does not exist. Build failed."
          exit 1
        fi

    # Create a Git tag
    - name: Create a Git tag
      run: |
        TAG_NAME="v1.0.${{ github.run_number }}"  # Incremental version, or use Git commit SHA
        git tag $TAG_NAME
        git push origin $TAG_NAME

    # Upload the APK as a release artifact
    - name: Upload APK as artifact
      uses: actions/upload-artifact@v4
      with:
        name: app-release-apk
        path: app/build/outputs/apk/release/app-release-unsigned.apk

    # Create a GitHub release
    - name: Upload APK to GitHub Release
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v2
      with:
        files: app/build/outputs/apk/release/app-release-unsigned.apk
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}